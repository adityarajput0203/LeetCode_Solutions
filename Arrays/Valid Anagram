//Time complexity : O(n) where n is the length of the strings. We iterate through both strings once.
//Space complexity :O(1) as we use one array with constant length 26.

class Solution {
    public boolean isAnagram(String s, String t) {

        if(s.length() != t.length()){
            return false;
        }

        int mp[] = new int[26];

        for(char ch : s.toCharArray()){
            
            mp[ch - 'a']++;
        }

        for(char ch : t.toCharArray()){

            mp[ch - 'a']--;
        }

        for(int i: mp){

            if(i!=0){
                return false;
            }
        }

        return true;
        
    }
}
